name: Publish

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write
  pull-requests: write

env:
  AWS_REGION: eu-west-2
  AWS_ACCOUNT_ID: "094954420758"

jobs:
  build:
    if: github.run_number != 1
    name: CDP-build-workflow
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Test code and Create Test Coverage Reports
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
      - run: |
          npm ci
          npm run build:frontend
          npm test

      - name: Build and Publish
        uses: DEFRA/cdp-build-action/build@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  pact:
    needs: build
    runs-on: self-hosted
    if: github.event.pull_request.head.repo.full_name == github.repository || github.event_name != 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run contract tests
        env:
          PACT_BROKER_BASE_URL: https://ffc-pact-broker.azure.defra.cloud
          PACT_BROKER_USERNAME: ${{ secrets.PACT_USER }}
          PACT_BROKER_PASSWORD: ${{ secrets.PACT_PASS }}
        run: SERVICE_VERSION=$(git describe --tags --abbrev=0) npm run test:contracts

      - name: Publish pacts
        env:
          PACT_BROKER_BASE_URL: https://ffc-pact-broker.azure.defra.cloud
          PACT_BROKER_USERNAME: ${{ secrets.PACT_USER }}
          PACT_BROKER_PASSWORD: ${{ secrets.PACT_PASS }}
        shell: bash
        run: |
          # Use bash to upload pacts manually since Azure Application Gateway blocks /contracts/publish

          # Loop through all pact files
          for pact_file in src/contracts/consumer/pacts/*.json; do
              if [[ -f "$pact_file" ]]; then
                  echo "Processing pact file: $pact_file"

                  # Extract consumer and provider names using jq
                  consumer=$(jq -r '.consumer.name' "$pact_file")
                  provider=$(jq -r '.provider.name' "$pact_file")
                  version=$(git describe --tags --abbrev=0)

                  # Construct the URI
                  uri="${PACT_BROKER_BASE_URL}/pacts/provider/${provider}/consumer/${consumer}/version/${version}"

                  echo "Publishing pact: $consumer -> $provider (version: $version)"

                  # Upload the pact using curl
                  if curl --silent --fail --request PUT \
                    --url "$uri" \
                    --user "${PACT_BROKER_USERNAME}:${PACT_BROKER_PASSWORD}" \
                    --header "content-type: application/json" \
                    --data "@${pact_file}" > /dev/null; then
                    echo "✓ Successfully published pact for $consumer -> $provider"
                  else
                    echo "❌ Failed to publish pact for $consumer -> $provider"
                    exit 1
                  fi
              fi
          done
