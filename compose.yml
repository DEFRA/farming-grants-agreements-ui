version: '3.4'
services:
  localstack:
    image: localstack/localstack:3.0.2
    ports:
      - '4566:4566' # LocalStack Gateway
      - '4510-4559:4510-4559' # external services port range
    env_file:
      - 'compose/aws.env'
    environment:
      DEBUG: ${DEBUG:-1}
      LS_LOG: WARN # Localstack DEBUG Level
      SERVICES: s3,sqs,sns,firehose
      MONITOR_SQS: ${MONITOR_SQS:-true}
    volumes:
      - '${TMPDIR:-/tmp}/localstack:/var/lib/localstack'
      - ./compose/start-localstack.sh:/etc/localstack/init/ready.d/start-localstack.sh
      - ./compose/monitor-sqs.sh:/etc/localstack/init/ready.d/monitor-sqs.sh
    healthcheck:
      test: ['CMD', 'curl', 'localhost:4566']
      interval: 5s
      timeout: 3s
      start_period: 5s
      retries: 3
    networks:
      - cdp-tenant

  redis:
    image: redis:7.2.3-alpine3.18
    ports:
      - '6379:6379'
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - cdp-tenant

  mongodb:
    image: mongo:6.0.13
    networks:
      - cdp-tenant
    ports:
      - '27017:27017'
    volumes:
      - mongodb-data:/data/db
    restart: always
    healthcheck:
      test: [ "CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 }).ok" ]
      interval: 5s
      timeout: 5s
      retries: 10

  ##############################################################################
  # UI
  ##############################################################################
#  farming-grants-agreements-ui:
#    build: ./
#    ports:
#      - '127.0.0.1:3000:3000'
#    depends_on:
#      farming-grants-agreements-api:
#        condition: service_healthy
#      redis:
#        condition: service_healthy
#    environment:
#      PORT: 3000
#      NODE_ENV: ${NODE_ENV:-development}
#      REDIS_HOST: ${REDIS_HOST:-redis}
#      USE_SINGLE_INSTANCE_CACHE: ${USE_SINGLE_INSTANCE_CACHE:-true}
#      BACKEND_URL: ${BACKEND_URL:-http://farming-grants-agreements-api:3555}
#    networks:
#      - cdp-tenant

  ##############################################################################
  # API
  ##############################################################################
  farming-grants-agreements-api:
    image: defradigital/farming-grants-agreements-api:latest
    ports:
      - '3555:3555'
    depends_on:
      localstack:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    env_file:
      - 'compose/aws.env'
    environment:
      PAYMENT_HUB_LOGGING: ${PAYMENT_HUB_LOGGING:-true}
      PORT: 3555
      NODE_ENV: ${NODE_ENV:-development}
      LOCALSTACK_ENDPOINT: ${LOCALSTACK_ENDPOINT:-http://localstack:4566}
      MONGO_URI: ${MONGO_URI:-mongodb://mongodb:27017/}
      SEED_DB: ${SEED_DB:-true}
      GA_TRACKING_ID: ${GA_TRACKING_ID}
      SQS_ENDPOINT: ${SQS_ENDPOINT:-http://localstack:4566}
      QUEUE_URL: ${QUEUE_URL:-http://sqs.eu-west-2.127.0.0.1:4566/000000000000/create_agreement}
      QUEUE_NAME: ${QUEUE_NAME:-create_agreement}
      ENABLE_TEST_ENDPOINTS: ${ENABLE_TEST_ENDPOINTS:-true}
      JWT_ENABLED: ${JWT_ENABLED:-false}
      AGREEMENTS_JWT_SECRET: ${AGREEMENTS_JWT_SECRET:-a-string-secret-at-least-256-bits-long}
      ENABLE_PAYMENT_HUB: ${ENABLE_PAYMENT_HUB:-false}
      VIEW_AGREEMENT_URI: ${VIEW_AGREEMENT_URI:-http://localhost:3555}
      SNS_TOPIC_TYPE_AGREEMENT_STATUS_UPDATED: ${SNS_TOPIC_TYPE_AGREEMENT_STATUS_UPDATED:-io.onsite.agreement.status.updated}
      SNS_TOPIC_ARN_AGREEMENT_STATUS_UPDATED": ${SNS_TOPIC_ARN_AGREEMENT_STATUS_UPDATED:-arn:aws:sns:eu-west-2:332499610595:agreement_status_updated}
      FILES_S3_BUCKET: ${FILES_S3_BUCKET:-farming-grants-agreements-pdf-bucket}
      FILES_S3_PREFIX: ${FILES_S3_PREFIX:-agreements}
    healthcheck:
      test: [ "CMD", "curl", "-fsS", "http://localhost:3555/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - cdp-tenant

volumes:
  mongodb-data:

networks:
  cdp-tenant:
    driver: bridge
